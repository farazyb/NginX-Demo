name: Deploy Nginx

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read

env:
  # — تنظیمات قابل تغییر —
  REGION: us-central1                 # ریجن کلاستر GKE
  CLUSTER: autopilot-cluster-1        # نام کلاستر
  NAMESPACE: default                  # نِیم‌اسپیس دیپلوی
  IMAGE_NAME: nginx                   # نام ایمیج در Docker Hub (مثلاً nginx یا nginx-demo)
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  PROJECT_ID: ${{ secrets.GOOGLE_PROJECT }}
  IMAGE_TAG: ${{ github.sha }}        # کنار latest برای رولا‌بک راحت
  MANIFEST: resources.yaml            # مسیر فایل مانيفست شما

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 1) Login به Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 2) Build & Push به Docker Hub (با کش)
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push image (Docker Hub)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:latest
            docker.io/${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 3) نصب gcloud و احراز هویت با کلید JSON سرویس‌اکانت
      - name: Setup gcloud (service account key)
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          install_components: gke-gcloud-auth-plugin
          export_default_credentials: true

      # 4) گرفتن کرِدِنشال‌های کلاستر GKE
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.CLUSTER }}
          location: ${{ env.REGION }}

      # 5) رندر مانيفست با ایمیج Docker Hub و تگ SHA
      - name: Render manifests
        run: |
          export IMAGE="docker.io/${DOCKERHUB_USER}/${IMAGE_NAME}:${IMAGE_TAG}"
          if [ ! -f "${MANIFEST}" ]; then
            echo "❗ ${MANIFEST} not found. Please add your Kubernetes manifests (image: \${IMAGE})"
            exit 1
          fi
          # رندر فایل با envsubst (به‌جای sed)
          envsubst < "${MANIFEST}" > out.yaml
          echo "Using image: $IMAGE"

      # 6) Apply و بررسی rollout
      - name: Apply & verify rollout
        run: |
          set -euo pipefail
          kubectl apply -n "${NAMESPACE}" -f out.yaml
          # اگر نام Deployment متفاوت است، این خط را مطابق نام خودت عوض کن
          if kubectl get deploy nginx -n "${NAMESPACE}" >/dev/null 2>&1; then
            kubectl rollout status deploy/nginx -n "${NAMESPACE}" --timeout=180s
          else
            echo "⚠️ Deployment 'nginx' not found for rollout check. Skipping."
          fi
          kubectl get svc -n "${NAMESPACE}" -o wide
